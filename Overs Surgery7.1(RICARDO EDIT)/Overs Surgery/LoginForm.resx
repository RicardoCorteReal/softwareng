<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>